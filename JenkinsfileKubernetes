node{
     
    stage('SCM Checkout'){
        git credentialsId: 'SridharSirineniGitRepo', url: 'https://github.com/sridharsirineni/spring-boot-mongo-docker.git'
    }
    
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "M3", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
      
    } 
    
    
    stage('Build Docker Image'){
        sh 'docker build -t sridharsirineni420/spring-boot-mongo:$BUILD_NUMBER .'
    }
    
    stage('Push Docker Image'){
        withCredentials([string(credentialsId: 'DOKCER_HUB_PASSWORD', variable: 'DOKCER_HUB_PASSWORD')]) {
          sh "docker login -u sridharsirineni420 -p ${DOKCER_HUB_PASSWORD}"
        }
        sh 'docker push sridharsirineni420/spring-boot-mongo:$BUILD_NUMBER'
        sh 'docker rmi sridharsirineni420/spring-boot-mongo:$BUILD_NUMBER'
     }
     /**
     stage("Deploy To Kuberates Cluster"){
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNATES_CONFIG',
         enableConfigSubstitution: true
        )
     }
	 **/
	  
      stage("Deploy To Kuberates Cluster"){
	    sh "chmod +x changeTag.sh"
        sh "./changeTag.sh ${BUILD_NUMBER}"
        sh 'kubectl delete -f node-app-pod.yml || true'
        sh 'kubectl apply -f node-app-pod.yml'
      } 
     
}
